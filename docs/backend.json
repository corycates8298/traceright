{
  "entities": {
    "Order": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Order",
      "type": "object",
      "description": "Represents an order in the supply chain.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the order."
        },
        "supplierId": {
          "type": "string",
          "description": "Reference to the Supplier that is providing this order. (Relationship: Supplier 1:N Order)"
        },
        "orderDate": {
          "type": "string",
          "description": "The date the order was placed.",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "The current status of the order (e.g., 'In-Transit', 'Delivered', 'Pending')."
        },
        "estimatedDeliveryDate": {
          "type": "string",
          "description": "The estimated delivery date for the order.",
          "format": "date-time"
        },
        "quantity": {
          "type": "number",
          "description": "The quantity of items in the order."
        },
        "materialId": {
          "type": "string",
          "description": "Reference to the Material being ordered. (Relationship: Material 1:N Order)"
        }
      },
      "required": [
        "id",
        "supplierId",
        "orderDate",
        "status",
        "quantity",
        "materialId"
      ]
    },
    "Supplier": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Supplier",
      "type": "object",
      "description": "Represents a supplier in the supply chain.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the supplier."
        },
        "name": {
          "type": "string",
          "description": "The name of the supplier."
        },
        "contactEmail": {
          "type": "string",
          "description": "The email address of the supplier's contact person.",
          "format": "email"
        },
        "contactPhone": {
          "type": "string",
          "description": "The phone number of the supplier's contact person."
        },
        "performanceScore": {
          "type": "number",
          "description": "A score representing the supplier's performance."
        },
        "documentIds": {
          "type": "array",
          "description": "References to Documents associated with the Supplier. (Relationship: Supplier 1:N Document)",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "name",
        "contactEmail",
        "performanceScore"
      ]
    },
    "Material": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Material",
      "type": "object",
      "description": "Represents a raw material or component.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the material."
        },
        "name": {
          "type": "string",
          "description": "The name of the material."
        },
        "description": {
          "type": "string",
          "description": "A description of the material."
        },
        "unitOfMeasure": {
          "type": "string",
          "description": "The unit of measure for the material (e.g., 'kg', 'liter', 'piece')."
        },
        "reorderPoint": {
          "type": "number",
          "description": "The quantity at which a reorder should be triggered."
        },
        "warehouseStock": {
          "type": "number",
          "description": "The current stock level of the material in the warehouse."
        }
      },
      "required": [
        "id",
        "name",
        "unitOfMeasure",
        "reorderPoint",
        "warehouseStock"
      ]
    },
    "Document": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Document",
      "type": "object",
      "description": "Represents a document (e.g., compliance document, SOP) stored in Firebase Storage.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the document."
        },
        "name": {
          "type": "string",
          "description": "The name of the document."
        },
        "url": {
          "type": "string",
          "description": "The URL of the document in Firebase Storage.",
          "format": "uri"
        },
        "uploadDate": {
          "type": "string",
          "description": "The date the document was uploaded.",
          "format": "date-time"
        },
        "supplierId": {
          "type": "string",
          "description": "Reference to the Supplier that the document belongs to. (Relationship: Supplier 1:N Document)"
        }
      },
      "required": [
        "id",
        "name",
        "url",
        "uploadDate"
      ]
    },
    "UiSchema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "UiSchema",
      "type": "object",
      "description": "Represents a UI schema used for dynamic UI rendering.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the UI schema."
        },
        "name": {
          "type": "string",
          "description": "A descriptive name for the UI schema."
        },
        "schema": {
          "type": "string",
          "description": "The JSON schema content as a string."
        },
        "description": {
          "type": "string",
          "description": "Description of the schema"
        }
      },
      "required": [
        "id",
        "name",
        "schema"
      ]
    },
    "Forecast": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Forecast",
      "type": "object",
      "description": "Represents a demand forecast for a material.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the forecast."
        },
        "materialId": {
          "type": "string",
          "description": "Reference to the Material being forecasted. (Relationship: Material 1:N Forecast)"
        },
        "forecastDate": {
          "type": "string",
          "description": "The date the forecast is for.",
          "format": "date-time"
        },
        "predictedDemand": {
          "type": "number",
          "description": "The predicted demand for the material."
        },
        "confidenceIntervalLower": {
          "type": "number",
          "description": "The lower bound of the confidence interval for the forecast."
        },
        "confidenceIntervalUpper": {
          "type": "number",
          "description": "The upper bound of the confidence interval for the forecast."
        }
      },
      "required": [
        "id",
        "materialId",
        "forecastDate",
        "predictedDemand"
      ]
    },
    "UserProfile": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User Profile",
      "type": "object",
      "description": "Represents a user's profile in the system.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user, corresponding to Firebase Auth UID."
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "The user's email address."
        },
        "displayName": {
          "type": "string",
          "description": "The user's full display name."
        },
        "photoURL": {
          "type": "string",
          "format": "uri",
          "description": "URL to the user's profile picture."
        },
        "role": {
          "type": "string",
          "description": "The user's role in the system.",
          "enum": [
            "Reader",
            "Editor",
            "Supervisor",
            "Admin"
          ]
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the user profile was created."
        }
      },
      "required": [
        "id",
        "email",
        "displayName",
        "role",
        "createdAt"
      ]
    },
    "Inventory": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Inventory",
      "type": "object",
      "description": "Represents the stock of a specific item in a specific warehouse.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the inventory record, usually a composite key."
        },
        "warehouseId": {
          "type": "string",
          "description": "Reference to the Warehouse where the stock is located."
        },
        "itemId": {
          "type": "string",
          "description": "Reference to the Material or Product being stocked."
        },
        "itemType": {
          "type": "string",
          "description": "The type of item being stocked.",
          "enum": [
            "material",
            "product"
          ]
        },
        "quantity": {
          "type": "number",
          "description": "The quantity of the item in stock."
        },
        "lastRestocked": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the item was last restocked."
        }
      },
      "required": [
        "id",
        "warehouseId",
        "itemId",
        "itemType",
        "quantity"
      ]
    },
    "Product": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Product",
      "type": "object",
      "description": "Represents a finished good or product.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the product."
        },
        "name": {
          "type": "string",
          "description": "The name of the product."
        },
        "sku": {
          "type": "string",
          "description": "The Stock Keeping Unit for the product."
        },
        "description": {
          "type": "string",
          "description": "A description of the product."
        },
        "pricing": {
          "type": "number",
          "description": "The selling price of the product."
        },
        "recipeId": {
          "type": "string",
          "description": "Reference to the Recipe used to create the product. (Relationship: Recipe 1:1 Product)"
        }
      },
      "required": [
        "id",
        "name",
        "sku",
        "pricing",
        "recipeId"
      ]
    },
    "Recipe": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Recipe",
      "type": "object",
      "description": "Represents a recipe or bill of materials for a product.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the recipe."
        },
        "name": {
          "type": "string",
          "description": "The name of the recipe."
        },
        "productId": {
          "type": "string",
          "description": "Reference to the Product that this recipe creates. (Relationship: Product 1:1 Recipe)"
        },
        "ingredients": {
          "type": "array",
          "description": "A list of materials and quantities required for the recipe.",
          "items": {
            "type": "object",
            "properties": {
              "materialId": {
                "type": "string",
                "description": "Reference to the Material used in the ingredient."
              },
              "quantity": {
                "type": "number",
                "description": "The quantity of the material required."
              }
            },
            "required": [
              "materialId",
              "quantity"
            ]
          }
        }
      },
      "required": [
        "id",
        "name",
        "productId",
        "ingredients"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "/users/{userId}": {
      "schema": {
        "$ref": "#/backend/entities/UserProfile"
      },
      "description": "Stores user profile information, including their role. The document ID is the user's Firebase Auth UID."
    },
    "/suppliers/{supplierId}": {
      "schema": {
        "$ref": "#/backend/entities/Supplier"
      },
      "description": "Stores supplier information. Uses supplierId as the document ID to establish path-based ownership."
    },
    "/suppliers/{supplierId}/documents/{documentId}": {
      "schema": {
        "$ref": "#/backend/entities/Document"
      },
      "description": "Stores documents related to a specific supplier. Uses supplierId from parent and documentId for the document itself. Enables listing documents scoped to a supplier."
    },
    "/materials/{materialId}": {
      "schema": {
        "$ref": "#/backend/entities/Material"
      },
      "description": "Stores material information, using materialId as the document ID."
    },
    "/materials/{materialId}/forecasts/{forecastId}": {
      "schema": {
        "$ref": "#/backend/entities/Forecast"
      },
      "description": "Stores forecasts related to a specific material. Enables listing forecasts scoped to a material."
    },
    "/orders/{orderId}": {
      "schema": {
        "$ref": "#/backend/entities/Order"
      },
      "description": "Stores order information. Uses orderId as the document ID."
    },
    "/uiSchemas/{uiSchemaId}": {
      "schema": {
        "$ref": "#/backend/entities/UiSchema"
      },
      "description": "Stores UI schemas for dynamic UI rendering. Uses uiSchemaId as the document ID."
    },
    "/inventory/{inventoryId}": {
      "schema": {
        "$ref": "#/backend/entities/Inventory"
      },
      "description": "Stores stock levels for materials and products at different warehouses."
    },
    "/products/{productId}": {
      "schema": {
        "$ref": "#/backend/entities/Product"
      },
      "description": "Stores information about finished goods or products."
    },
    "/recipes/{recipeId}": {
      "schema": {
        "$ref": "#/backend/entities/Recipe"
      },
      "description": "Stores recipe and bill of materials information."
    }
  }
}
    